const { complexRoute } = require("./complexRoute");

describe("complexRoute()", () => {
  //Tests for basic task
  it("Starts at (0,0) and returns that given no movement", () => {
    expect(complexRoute("")).toEqual([0, 0]);
  });
  it("Can rotate with left and right commands", () => {
    expect(complexRoute("R+")).toEqual([1, 0]);
    expect(complexRoute("L+")).toEqual([-1, 0]);
  });
  it("Still works for longer tests", () => {
    expect(complexRoute("R++ L+++")).toEqual([2, 3]);
    expect(complexRoute("L++ R-- L+")).toEqual([-3, -2]);
    expect(complexRoute("R+ L-- R+ R-- L++")).toEqual([4, 0]);
    expect(complexRoute("L-++ L+ R+ R- L-++ R-- R-+- L+")).toEqual([-4, -3]);
  });

  //Tests for optional task
  it("Can move in a cardinal direction", () => {
    expect(complexRoute("N+")).toEqual([0, 1]);
    expect(complexRoute("E+")).toEqual([1, 0]);
    expect(complexRoute("S+")).toEqual([0, -1]);
    expect(complexRoute("W-")).toEqual([1, 0]);
  });
  it("Can move in more difficult cardinal directions combined with rotations", () => {
    expect(complexRoute("L+ E- R+ R+++ W- S+ N+")).toEqual([2, 1]);
    expect(complexRoute("S- L- S- L+ R--+ W+ L+-+- N+")).toEqual([1, 2]);
  });

  //Two big tests given
  it("Completes the big official tests", () => {
    let basicOrders =
      "L+ L++-- L++- R+ L+ R++-++--- R+ L+ R--- L- L- R- R+++ R++- R-- L++ L+ R- R+ R+ L+ R- R- L+ R- R- R+ L- L++++ L+ L-+ L- L-++ L+--+--- R++- L+ L+ R++ R- R- R+ R- L+ R-- R+ R- L++++ L+ L+ R-++-+ L- R- R- R+ L+ R+ L- R+++ R++ L- L- L- L- L- R+ R- L- R+ L++--+ R+ L- L-+ R+ R+ R+--+---++ L+ L+++--+- L+ R+-- L- R+ L-+--++- R- L- L+ L+ R++-++ L+ L+ L-+-+ L++ R-- R--+- R+--+ R+- R+-+ R-+ R- L++ L- L+ R- R+ R-- L---+- R+ L+ L+-+ L+ R+ L--+ L+- L-++-+ R- L-- L-++ L+ R- R- R+ L- L- L--+ R--+ L- L-+-+-+-+- R- R- L- R-++--+- R+ R++-+- L- R- R+ R--+-+ L-- R+ R++-+ R--+++-- R---+- L+ R+- R+-+- R- R-- L+ L+ R-- L+++ L+ L+ L+-+ L- L- L-+- L+ R- R- L+- R- R+ R- R+ R+-- R+ R++- L- L+ L+ L-+++ R++ R+ L-- L- R- R+-++ L+ L-+- L+ R-+ R+++++ R-+- R++ R- R- L+ L+ R--++----- L-+-+- L+ L++ L- L+ L- R- R+ R- L+--+--++ L+ L+ L+ L+ R+- R- R- L--- R+ L++ L+ L+-+ R-++-++ R+++++++ R+ L+ L+ R- R+ L+ R---+-+ L- R+ L+- R- R+- L++-+ R- R+ L- R+++ R- L+ L+ R-- L-----+++++ R+ R-- R- L-+++-- R+-+- L+ R-+- L- R+ L-++-++-++ R+++-----+- L-+ R- L+-- L+ L- L++ R+ R--+ R-++- R-- R-+ L- L+ L++- L-+---+-+--+ L+ L- L- R+ L+++ R+ L- R+ R-++-- R+ L-- L+ R- L--+ L++ R-+--++ L- L+ R+ R+ R- L+++ L- R---- L+ L+ R- L+ R+ L-++-- R-- L---- R+ L+++-+ L+ L+ R- L- L+ L+--- R+-+++ L+ L---+ R+ L- R+-++ L++- R+ L+---++ L-+ R+ L+-- R+ R+-+ R- R-++++ L+- R--+ R++ R- L-+ R++ L-++ L+-+- L+++ L- L+ L- R---- L+---+ L- L-+ R+ R-- L-++ R+ R-++-+ L- R- R+ L++- L-- L-+- R- R+ R- L- R-++++ R-+ L- R---+ R+ L- L-+-+---++-+ R- L- L+ R+ R+++- R-++ R---+-+--++ L++++-+- R+ L-- L+--- R+--++ R+ R--+- R+ L-- L++---- L- L+ L- L+ L--++-+ L+ R+ L+-- R-- R+ L-+++ L-- L+ L--+++ R+ R++ L+ R- R+ R+ R- L+ R- R- L+ L+ R+--- R-+-++ L+-+- L- R+ R- R+ R+-++---+ R+ L-+ R+ R- R- L+ L-+- R-+ R+--+ L--+-+- L-+-+ L+ R+ L- L+ L-- R+ R-+ L+ R++-+- L++++ L- R- R- R---- L-- L+ L+ L- R+ R- L- R-+-- R--+- L-- R-++ L- R+++ R- R- L--+++ R-+-- R+- L++++- R--- L+ L- L+ L+++- L+-+--++- L+ L+ L+ L-+- L-+- R+ R- R+- L+ R++ L-+ L-+ R--- R- R- R++++- R- L- L- R-------+ R- R+ L+ R- R-- R++ L+-- L+ L-- L--++-+ R+ R- L+-+-- L- R+ L+--+ R- L--+ L+ R+- L--+++ R+ L-- L+ R-+ L+-- R- R+-+++ L+ R+-- L+ R- R- R+ R- L----- R- R- L-+ L+ L+ L- R-+- L+- R-+ R- R+ R-- L- R--- L- R+- L+++ R+ L+ R- R- R+ R- R- L++-+++ L---+ L- R+---+ R+ R-+ L--- R++++++--++ R+ R-- R-+ R+--+-+- L+ R++- L++++- L- R- L+ R---+ R-+-+- R-- R+ R- R-+---+--+ L+--++-+-+ R++++++ L-+ L+ L- R-+ L---+ L- R--- R+ R+- L-+-+++ L- R--+ R++- L- R+ R++ L- L+ R+-- L++-+-+ R+- R-+++ L+- R+ R+-- L+---- R+ L---+- R--+++--+-- L+ R-++--+- R+- R++ L++-- L+ R--+ R+++ R++++ R- R-- L+- R-+- L+--+ R+ R+-+--+ R+ L+ L- L+- L- L- R-+ R-+- L--+- L-+- L- R- R+ L-+ R- L+-+ R-+-+ R+-+- L+ L++ R--- L+ L+--- R- L- L+-++ R- R+ L- L- L--+--- R- R+ R+-+++----+- R++- R- L---- R- L- R--- L- R+ R+ R+- L++ R-- L+ R+++- L+ L+ L+ L-- R---- L++ R-- L-- R+ R+ L+ L++- L- L++-- R++- R-- L+ R- L+- R++ R- R- R+ L- L+++- L- R--+- R-- L+- L++- R- L+ R- R+ L+ L++----+ R+ L- R- L--++++-+-- L- L-++ R+++++-- R-- L- L+ R------ L+ L+- R+ R-+-++ R- R+ R--+ R+ L+++ L+ L+- R++- L- L- R+ L- L-+ R+++- R- L++--+ R--+ L+- R-- L+ R+-- R++- L+ L+ R-+ R+---- L-+--- L-+ L+ R- L+- L-- L-+- L- L+- R+ R--+ R+ R- L++- L+ R--+ R- L-++++ R- L- R- L-- L+ R- L-----+ L- R- R+ R+ L+ R+-+- R+-+++ R-++ L+ L- R+ L+ L---+ L- R+- R+ R- R--+ R- R- L- R++----+ R+- R+-+ R+ R-- L- R--+ R+++ R+ L- R+ R- L- R+ L+ L- L- R+ R++- L- R- R- L+ L+ L- L+ R+ L+ R++++-+-++-- L- L- L+ R- L+- L+ R- R+-- L--++- L- L+ L+ R+-+-++ R- L- R+ R+ L+ L- R-+ R- L- R- L-++- R- R- R- L++ L++- L- L++-- R++ L- R+ R- R+ R+ R- R- R-+-- R-+- L++-+ L--++- R- R+ L++ L--++-++- L-+++ L- L-+++ L-- R- L+- L-- R-+- L- L+ R--+++ L- R+- L++-++-+---+-+ R+-+ L+-- R++ R- L--- L-+ R-- R++ R- R---+- R- L- L+++-++--+-- L+---- R------+-+- R++ L+- R- L--- L+ R+ R-- L- R- R+ L--+ R-++-+ R++ L+ L+ R------+ R- L+ R- R- R+ R- L++ R+ R+- L++ R++ L+++ R- L+ R+ R---++-++-- R- R- R+ R- L-- L-+ R+ L- L+-- L+ R- L+ L- L- R--+- R-- L- L- L+ R- R+ R-+-+-+ R-- R- R- R-+ R++ R+ R- L- R- L--- L-+--- R--+---- R+- L-+--++++-+-+ R+ R- L- R- R++- L-+--+ R+ R++++-- R- L+ R+ R--++-+-+-++ R+ L- R-- L++---+- R+ L+ L++ L-+- R+ R- L+ L-++++-+- R++ L+++++-++--+ L--- R+ L+ R- R- R- L-++ R++- R- L-+-- L--++ L+--- R+-+-+ L+ L+----+- R+ L+ R+ L---++ R-- R+--++++ R-+-- L++++ L++-- R+ R--- L+ R- R+++----++--- L+ R- L+ R+++ R- R-+ R- L+ L+---++- R+ R+- L+ L+ L- R+ R- L-+- L-";
    let complexOrders =
      "R- L+ R--- W-+ L+ W- L---+ E- R+ R+- R--+ L+ S--+ R-++++-+ R- E- W- L+ L--- R----+--- L- L+ L+- S+ R+ L- R+-+-- R+ R-++ L- R- W-- R- R- S+-++-++-++ L- L+-----++-++ N- S++ W+ S-+- R-- L-- R- R- L+ L+ N-- R- R+- R+ L+ N+ L+++- R+-+ S-+ R++- R--- L- R- S- W+--+ L+- R+ S-+-- R- L-+ R+-+- S- L- L++++- R-++++ R-+++- R++-----+- L+ L+ R---+ L+ N+ S+ L+---+--+++++ R--+ E- R-+ R+ L+ R- L- N--+ R-+ R-+ R- L+ E+ R+ L- L- N+ R-+ L+++-+ L+ S++ L+ S+ N--+ E-++-+--+- W++-++ R--+-- N++- R++---+ R-++ R- L++ L+ W+ R+- R-+++- R- W+ R+ S- N+ L+ R++ N+ R- R-+-++++ R+ L+ S- N+----- L-- R++--+-+--++ R+ L++-++++---+ S-+-- R++-+ W+ N++++ L-- L-- R+- S+ L--++ N++ L+- L- N- L- W+ L-- R+ E-+- R--+-- R-- L+ R- R- R- R+ S- N+ R+ S-++ E- R+++-+---++ R--- R- R- W++ L+ L-++- E+ N+ L+- L-++--- L- R+- R--+-- L- R++ R- R- S-- N--++ R+ L-+ L+-++-+ R- E+---- R- W- R- L- R+ N+++ R++ L-+++---++ R- R+ W-+ N+ S+--+-+-++- L-- N--+ R+ R- W+ L-+- L--++ R+-+ L++ E- L-- R- R+ L- S+ S+ L+ L+ R-+- L- L+ R- L++--+ L- L++ L+ N--+ R- L-- S- R+-+--+ L+ L-+ N+ R----+-+ R- L++-+- E-+ R-++ N--+--- L+ R- E+--- R-++---+++-+- S- R+ L-++-+ L- L+ R+ L++-+--- R++- R++-- R- R-- L+ L--+- L+ S+ L-- L+ R+ L++ L++ W+ W+ L+-++ R+-+- L- E+-++ S-- R+ W+ R-+ R- R+-+ E+ R++-- W+ L++ L---+ E- L+ W-- L-- N- L- L-+ W++ W- L+ L--++-- L++- L+- L+ W- E- R+++ L+ R+ R---+ L+----+--- L- E- E+ E- E- R-+- R+- R---+-- R-+----++-+++--+ L+ W-+-+--++++-- E+ R+-+-+ N+ R- L++ E- L+ L- R--+ L- L+ S+ R-++ L- R++-+-+ R-+ L+ L- N- E+ E+ R+ L+ R- S+++ W+ S+ L- R- L- R+ L- R-++ W+ L+ L- L++ R-+++-+ S+ R- R+ L+ N--+++ R- L+ R++ L+ L- L-- R+--+-++-+--+++ R- E+-+- R+ S++ R- S+ L+ N- N+ L----- R+ N++ L+ R+ E-+--+ L--+ L- R+ W-+ W+++-+- R- L- R-+ R-+ L++ R----++- S+ S-+ R- L- L- L+- N+ L- L++ L+ R--+ L+ S- W-++++ W+ L-++-+-- S---++-++ L- L---++- R-- R-+- R+- L+ R+ R- N+-- L- R- L+ L- L+-+ R-+ E+ R--- L---+ R+-+++- L- W+ L+- R- R-++++ S- L- R+ L- R- R+ L-+++- L- R+ L- S++--+ S+ N- S+ L++ R+ L+ L------ R-+-+ L++ R+++++ L+ R+- L+ W- W+ S++-- L- R+ L+ L+ W-- W- L- R- L-+- L+ L- R+-++ R+ W+--+--- R+ R- S-+ R+ R--+-+-- R+ R++-++ N+ E++- R+ L+ R+++ N+--++-+--+-++ L+- R+ L-- L- R-- R-+- L+ E-+ N-+ R++ W-++-+ L+ R- R+ E- L+- S-+-+- W++++++ L--+++- W+ W-- R+ L+--+ W+--- L- N+ L- R+ R- L- R- R--- R--++ L++--+++--++---- L- L- R++--+--+++--+-+-+--+ N- L- R- L+-+ R+ S+ W- R---+++- N+ W+ L- L++-----++ L--+ R- R- R--+-+- R+ R++- L-- L+-+ L+ R-- L- R+ L- L- L+ L- R--+++ L--++ L+++++- R+ W- W---+ R-++ R++----+----++ L+-+ E- R-+- S+--+- E++--- R-++---+ L+ W-+++--+ L-- L+ R++ E- R+ E+- L+ R- R- S+ L- R-+-++- W--- S- R+ R+-+- R--+ R+-- L+- W- R+-+ L++ N- L- L- L+++ R-- L+-++--+++ L- N-- R+---- R+ R+ N+ L- R+ W+ W+ L+++---- L+- R-+ S-+- R+ R- L- R- E-+ R--- L+ L+ R+---- L+ L- L-+- W+ E+ L---+ L+ W- L- R+ S+ L+ E+-+++++++- R+ R- W- L-++-- R- W++ R+ L+-++ L+-++- R- R-+ R-++-+-+-+- R- L+ R+ E+ L+ R+- L- L- L+++-++-++- R+ L++ W-+- L+-+ S+- E+++-++ R+ R++ N- R--+--- R--+ R+ R+ E++++++ L+ N---- S- S- S-+ S--++- L+ L-+- L-- E-+ R+ L+ E--+ R+ L- R---+- W- W+ L+ L- L+ L++-+-+- E--+- N- L+ R+ L++ R+ R-++ L+ R+ L+ R+ R-+ L+ L++ L+ L+ S+ R++ L- R+- R+--++++- R- R-- R----- R+-+ W- W+-+ L-++- L- R+ R+ R- R- N-+ R-+-+-+ L++ R---++ L-+- L- L+ E++ L++++ L+-+-+-+- R+ L- E- L--+- E- R+- R- R+-- R+ N++ L---- L- R+- E+ R----- L- N+ N++++-++ L+-- W- L+ W+ R--+-+-+ R-+++-- E+ R+ L-- R- R- R- E++--++ L+++-+- R-++ L+ R- L- R+ W- L- S+ N- R- R+- E- W+ L- R++--++++-+ W+ E+ L++++++ L+++- N- R-+ L-- W-+++-+--+ E+- L+ S+ R+ R- W+- L- L+--- R- L-++ S+-+++ L- L++-++- E- R- R-++- L+ R----+-+ R--+++-+ L- W- L- R--- L- R+ L-+-++--+ S- R+ W--++- R+ R- L+- R++++ L- L-- L+ L+-+-- R+ R- R- E++++ E+- W- R- S-+++- L++ S++--++ N+ W- R- N+ R- W- W- R+ R---+-++- L----+-+-+-+-- L-- L- L- W+- S- W-+-+- L- L---++- R+ R+ R+ R+--++ R+- R-- R- L-+-+++ S- L--+ L---+-++-+ R-+- L+ L-+ R- N-+---++ N+- L+ L++ E-+ R- L+-+---+ N--+ L- L- R---+- L+- R- L+ L- L+ L+ L-+-+ S- R- L- N+ R- R+ R+ L+ S++ R- R-++ S- S-+-+-++ L-++ L-----+--++ E-+-- L- R-+ L+ L-+-+ R- S+++--+ L+ N-+-++- L+ R- R--+ R-++++ N+ L++-++ L+ R- L+-++ S--- R- L+-++ R+-+ L+- S- W---+-- L+ S+-+++ L+ E+ R++ E+ R+- R- N--+--+++- R- L- L++ S+ R+- L- R+ L+ L--+-+++ L--++--++ R- L--+ W+-- R+ R-+- N- R- L++-+- L-+- R+-+ R+ R++- L--- R++ L- R- E- E-+ R- L+---- R++-+-+ N-- R++ R-- L-+-++ L+ R--+++- S-- L+ R+++ R+ E- E- L+++ N+ L+-- L- R-++- L+ R+ W- L+ L+ L- N+-++-------++ S-- L+ L+ L- L- R- R- S+ E- R- L++ L+ L++++---+- L- R- R+++ L+ R--- N-++ L+-+ S- R- R-+- R+ E+- L+ N++-++ L-- R+ W-++ E+ L+ E---+ L- L+";
    expect(complexRoute(basicOrders)).toEqual([-24, 26]);
    expect(complexRoute(complexOrders)).toEqual([48, -35]);
  });
});
